코딩테스트 연습>코딩 기초 트레이닝>
---1. a와 b 출력하기--
<문제 설명>
정수 a와 b가 주어집니다. 각 수를 입력받아 입출력 예와 같은 형식으로 출력하는 코드를 작성해 보세요.
<제한사항>
-100,000 ≤ a, b ≤ 100,000
<입출력 예>
입력 #1
4 5

출력 #1
a = 4
b = 5

<기본식>
const readline = require('readline');
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

let input = [];

rl.on('line', function (line) {
    input = line.split(' ');
}).on('close', function () {
    console.log(Number(input[0]) + Number(input[1]));
});

<정답>
const readline = require('readline');
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

let input = [];

rl.on('line', function (line) {
    input = line.split(' ');
}).on('close', function () {
    console.log(`a = ${Number(input[0])}\nb = ${Number(input[1])}`);
});

// `${}` 쓰면 값이 숫자로 표현된다.
// \n 을 쓰면 줄바꿈이 된다.


---2.문자열 반복해서 출력하기---
<문제 설명>
문자열 str과 정수 n이 주어집니다.
str이 n번 반복된 문자열을 만들어 출력하는 코드를 작성해 보세요.

<제한사항>
1 ≤ str의 길이 ≤ 10
1 ≤ n ≤ 5

<입출력 예>
입력 #1
string 5

출력 #1
stringstringstringstringstring

<기본식>
const readline = require('readline');
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

let input = [];

rl.on('line', function (line) {
    input = line.split(' ');
}).on('close', function () {
    str = input[0];
    n = Number(input[1]);
});

<정답>
const readline = require('readline');
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

let input = [];

rl.on('line', function (line) {
    input = line.split(' ');
}).on('close', function () {
    str = input[0];
    n = Number(input[1]);
    console.log(str.repeat(n));
  
});

// str.repeat(count)
// count : 문자열을 반복할 횟수이며, 0과 양의 무한대 사이의 정수여야 한다.
참고 https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/String/repeat


---3.대소문자 바꿔서 출력하기---
<문제 설명>
영어 알파벳으로 이루어진 문자열 str이 주어집니다. 각 알파벳을 대문자는 소문자로 소문자는 대문자로 변환해서 출력하는 코드를 작성해 보세요.

<제한사항>
1 ≤ str의 길이 ≤ 20
str은 알파벳으로 이루어진 문자열입니다.

<입출력 예>
입력 #1
aBcDeFg

출력 #1
AbCdEfG

<기본식>
const readline = require('readline');
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

let input = [];

rl.on('line', function (line) {
    input = [line];
}).on('close',function(){
    str = input[0];
});

<정답1>
const readline = require('readline');
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

let input = [];

rl.on('line', function (line) {
    input = [line];
}).on('close',function(){
    str = input[0].split('');
    str.forEach((value, index) => {
        if (value === value.toUpperCase()) {
            str[index] = value.toLowerCase();
        } else {
            str[index] = value.toUpperCase();
        }
    });
    console.log(str.join(''));
});

<정답2>
const readline = require('readline');
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

let input = [];

rl.on('line', function (line) {
    input = [line];
}).on('close',function(){
    str = input[0];
    ss = "";
    for(let i of str){
        if(i ==  i.toUpperCase()){
            ss += i.toLowerCase();
        }
        else{
            ss += i.toUpperCase();
        }
    }
    console.log(ss)
});
👉👉👉👉👉+= 연산자는 "덧셈 할당 연산자"
이 연산자는 변수의 현재 값에 다른 값을 더하고 그 결과를 다시 원래 변수에 할당하는 데 사용됩니다. 간단히 말해, x += y는 x = x + y와 같은 의미입니다.
예를 들어, ss += i.toLowerCase(); 라인은 ss 문자열에 i.toLowerCase()의 결과를 추가한다.
i.toLowerCase()는 i 변수에 저장된 문자를 소문자로 변환합니다.
반대로, ss += i.toUpperCase();는 i 변수에 저장된 문자를 대문자로 변환하고 그 결과를 ss 문자열에 추가합니다.


---4.특수문자 출력하기---
<문제 설명>
다음과 같이 출력하도록 코드를 작성해 주세요.

<출력 예시>
!@#$%^&*(\'"<>?:;

<기본식>
const readline = require('readline');
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

rl.on('close', function () {
    
});

<정답1>
const readline = require('readline');
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

rl.on('close', function () {
    console.log(`!@#$%^&*(\\'"<>?:;`);
});

<정답2>
const readline = require('readline');
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

rl.on('close', function () {
    console.log('!@#$%^&*(\\\'"<>?:;');
});

👉👉👉원래 \ 이 값이 출력이 안된다.
\ -> \\\ 로 해주거나
'' -> `` , \-> \\ 로 바꾸면 출력된다.




















